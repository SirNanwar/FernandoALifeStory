// <auto-generated />
using System;
using FernandoALifeStory.Data.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FernandoALifeStory.Data.Migrations
{
    [DbContext(typeof(FernandoDbContext))]
    partial class FernandoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Academics.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Field");

                    b.Property<string>("Institution");

                    b.Property<int>("Level");

                    b.Property<string>("Location");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Academics.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int?>("DegreeId");

                    b.Property<int>("ECTs");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DegreeId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Academics.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("DisciplineId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Books.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Certifications.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AdquiredAt");

                    b.Property<string>("CertificationName");

                    b.HasKey("Id");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Courses.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName");

                    b.Property<int>("CoursePlatformId");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("CoursePlatformId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Courses.CoursePlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CoursePlatorms");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Infos.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact");

                    b.Property<int>("ContactType");

                    b.Property<int>("InfoId");

                    b.HasKey("Id");

                    b.HasIndex("InfoId");

                    b.ToTable("ContactInfos");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Infos.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Info");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Infos.SocialMediaInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InfoId");

                    b.Property<int>("SocialMediaType");

                    b.Property<string>("SocialMediaUrl");

                    b.HasKey("Id");

                    b.HasIndex("InfoId");

                    b.ToTable("SocialMediaInfos");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Transversal.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId");

                    b.Property<int?>("CertificationId");

                    b.Property<int?>("CourseId");

                    b.Property<int?>("DisciplineId");

                    b.Property<string>("Name");

                    b.Property<int>("Proficiency");

                    b.Property<int>("Type");

                    b.Property<int?>("WorkId");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CertificationId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("WorkId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.WorkExperiences.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("WorkId");

                    b.HasKey("Id");

                    b.HasIndex("WorkId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.WorkExperiences.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Position");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Academics.Discipline", b =>
                {
                    b.HasOne("FernandoALifeStory.Data.Models.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FernandoALifeStory.Data.Models.Academics.Degree")
                        .WithMany("Curriculum")
                        .HasForeignKey("DegreeId");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Academics.Project", b =>
                {
                    b.HasOne("FernandoALifeStory.Data.Models.Academics.Discipline", "Discipline")
                        .WithOne("Project")
                        .HasForeignKey("FernandoALifeStory.Data.Models.Academics.Project", "DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Courses.Course", b =>
                {
                    b.HasOne("FernandoALifeStory.Data.Models.Courses.CoursePlatform", "CoursePlatform")
                        .WithMany("Courses")
                        .HasForeignKey("CoursePlatformId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Infos.ContactInfo", b =>
                {
                    b.HasOne("FernandoALifeStory.Data.Models.Infos.Info", "Info")
                        .WithMany("ContactInformation")
                        .HasForeignKey("InfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Infos.SocialMediaInfo", b =>
                {
                    b.HasOne("FernandoALifeStory.Data.Models.Infos.Info", "Info")
                        .WithMany("SocialMedias")
                        .HasForeignKey("InfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.Transversal.Skill", b =>
                {
                    b.HasOne("FernandoALifeStory.Data.Models.Books.Book")
                        .WithMany("Skills")
                        .HasForeignKey("BookId");

                    b.HasOne("FernandoALifeStory.Data.Models.Certifications.Certification")
                        .WithMany("Skills")
                        .HasForeignKey("CertificationId");

                    b.HasOne("FernandoALifeStory.Data.Models.Courses.Course")
                        .WithMany("Skills")
                        .HasForeignKey("CourseId");

                    b.HasOne("FernandoALifeStory.Data.Models.Academics.Discipline")
                        .WithMany("Skills")
                        .HasForeignKey("DisciplineId");

                    b.HasOne("FernandoALifeStory.Data.Models.WorkExperiences.Work")
                        .WithMany("Skills")
                        .HasForeignKey("WorkId");
                });

            modelBuilder.Entity("FernandoALifeStory.Data.Models.WorkExperiences.Achievement", b =>
                {
                    b.HasOne("FernandoALifeStory.Data.Models.WorkExperiences.Work", "Work")
                        .WithMany("Achievements")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
